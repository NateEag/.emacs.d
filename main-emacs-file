;; Nate Eagleson's .emacs file.

;; Just symlink ~/.emacs to ~/.emacs.d/main-emacs-file, and I should be good
;; to go.

;; This is the first import, so there's probably some dumb stuff in here.
;; I've never taken Emacs all that seriously up to this point - I've finally
;; decided to buckle down and start using it semi-seriously.

;; If, for some reason, you've found a copy of this and would like to speak
;; to the creator (for instance, to point out much more elegant and correct
;; ways of doing things), try nate@ishness.net.

;; Note that I use aquamacs, so if I ever have to move to a different
;; emacs distribution, I'll have to be certain to pull the non-Aquamacs
;; modifications I've made from the Aquamacs preferences.el file (stored
;; somewhere in the ~/Library directory on OS X).
(global-font-lock-mode 1)

;; The next few chunks of code tell a long, sad story about my relationship
;; with ASCII character 9 (a.k.a the Tab character). Once, we were the closest
;; of friends, but one day, I decided I hated it... Thus, the current
;; incarnation of my .emacs file. The goal is to ensure that it never occurs
;; in any source file I edit.
(setq indent-tabs-mode nil)

(setq c-mode-common-hook
      (function (lambda ()
                  (setq indent-tabs-mode nil)
                  (setq c-indent-level 4)
                  (setq c-tab-always-indent))))

(setq javascript-mode-hook 
      (function (lambda ()
                (setq indent-tabs-mode nil))))

(setq text-mode-hook
      (function (lambda ()
		  (setq indent-tabs-mode-nil))))

;; Everyone likes narrow-to-region.
(put 'narrow-to-region 'disabled nil)

;; Include third-party libraries.
(add-to-list 'load-path "~/.emacs.d/libraries")
(progn (cd "~/.emacs.d/libraries")
       (normal-top-level-add-subdirs-to-load-path))

;; Include the modes directory.
(add-to-list 'load-path "~/.emacs.d/modes")

;; I use python-mode.el, with the TQS-coloration patch applied.
(setq auto-mode-alist (cons '("\\.py$" . python-mode) auto-mode-alist))
(setq interpreter-mode-alist
      (cons '("python" . python-mode) interpreter-mode-alist))
(autoload 'python-mode "python-mode" "Python editing mode." t)

;; Functions for lazy-loading libraries. Perfect for attaching to mode-hooks.
;; DEBUG I'm totally new to elisp - how much should I worry about making sure
;; that these don't do redundant work if called multiple times (say I load
;; yasnippet once for python-mode, and once for c-mode)?
(defun initialize-pymacs ()
  "Loads and configures pymacs the way I like."
  (autoload 'pymacs-apply "pymacs")
  (autoload 'pymacs-call "pymacs")
  (autoload 'pymacs-eval "pymacs" nil t)
  (autoload 'pymacs-exec "pymacs" nil t)
  (autoload 'pymacs-load "pymacs" nil t))

(defun initialize-rope ()
  "Loads and configures rope as I like to use it."
  (pymacs-load "ropemacs" "rope-")
  (setq ropemacs-enable-autoimport t))

(defun initialize-auto-complete-python ()
  "Loads and configures auto-complete for Python hacking."
  (ac-personal-setup)
  (ac-ropemacs-init)
  (setq ac-sources '(ac-source-ropemacs)))

(defun ac-personal-setup ()
  "My basic configuration for autocomplete.el. Call this to activate it."
  (interactive)
  (require 'auto-complete)
  (global-auto-complete-mode t)
  (setq ac-auto-start nil)
  (setq ac-dwim t)
  (auto-complete-mode t))

;; A hacked-up version of the rope support from auto-complete-config.el.
;; I should probably seriously consider creating a distinct elisp file for
;; managing my autocomplete support...
;; This is finally starting to work. I can't autocomplete from . expressions,
;; which I know rope supports, but let's take it one step at a time.
(defun ac-ropemacs-init ()
  (defvar ac-ropemacs-completions-cache nil)
  (defvar ac-source-ropemacs
    '((init
       . (lambda ()
           (setq ac-ropemacs-completions-cache
                 (mapcar
                  (lambda (completion)
                    (concat ac-prefix completion))
                  (ignore-errors
                    (rope-completions))))))
      (candidates . ac-ropemacs-completions-cache))))

;; Initializing yasnippet
; Note that we don't map tab to yasnippet, since I'm planning to hack up the
; ultimate tab-handling function... If I can snag it from someone else, that'd
; be plenty satisfactory.
(defun initialize-yasnippet ()
  "Loads and configures yasnippet the way I want it."
  (require 'yasnippet)
  (setq yas/trigger-key (kbd "C-c <kp-multiply>"))
  (yas/initialize)
  (yas/load-directory "~/.emacs.d/snippets"))

;; Loading my python-mode accessories only when python-mode kicks in.
(defun load-python-mode-accessories ()
  "Loads all the libraries/tools I want to have when I'm in python-mode."
  (initialize-pymacs)
  (initialize-rope)
  (initialize-yasnippet)
  (initialize-auto-complete-python))
(add-hook 'python-mode-hook 'load-python-mode-accessories)

;; Customized keybindings follow.

;; I'd much rather have a sane way to goto-line than be able to easily change
;; my font settings...
(global-set-key "\M-g" 'goto-line)

