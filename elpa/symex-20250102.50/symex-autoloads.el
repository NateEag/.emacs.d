;;; symex-autoloads.el --- automatically extracted autoloads (do not edit)   -*- lexical-binding: t -*-
;; Generated by the `loaddefs-generate' function.

;; This file is part of GNU Emacs.

;;; Code:

(add-to-list 'load-path (or (and load-file-name (directory-file-name (file-name-directory load-file-name))) (car load-path)))



;;; Generated autoloads from symex.el

(autoload 'symex-mode "symex" "\
An evil way to edit Lisp symbolic expressions as trees.

This is a minor mode.  If called interactively, toggle the `symex
mode' mode.  If the prefix argument is positive, enable the mode,
and if it is zero or negative, disable the mode.

If called from Lisp, toggle the mode if ARG is `toggle'.  Enable
the mode if ARG is nil, omitted, or is a positive number.
Disable the mode if ARG is a negative number.

To check whether the minor mode is enabled in the current buffer,
evaluate `symex-mode'.

The mode's hook is called both when the mode is enabled and when
it is disabled.

(fn &optional ARG)" t)
(autoload 'symex-initialize "symex" "\
Initialize symex mode.

This registers symex mode for use in all recognized Lisp modes, and also
advises functions to enable or disable features based on user configuration.")
(autoload 'symex-mode-interface "symex" "\
The main entry point for editing symbolic expressions using symex mode.

Enter the symex evil state and show a hydra menu for accessing various
features." t)
(register-definition-prefixes "symex" '("symex-"))


;;; Generated autoloads from symex-computations.el

(register-definition-prefixes "symex-computations" '("symex-"))


;;; Generated autoloads from symex-custom.el

(register-definition-prefixes "symex-custom" '("symex-"))


;;; Generated autoloads from symex-data.el

(register-definition-prefixes "symex-data" '("symex-"))


;;; Generated autoloads from symex-dsl.el

(register-definition-prefixes "symex-dsl" '("symex-"))


;;; Generated autoloads from symex-evaluator.el

(register-definition-prefixes "symex-evaluator" '("symex-"))


;;; Generated autoloads from symex-evil.el

(register-definition-prefixes "symex-evil" '("symex-"))


;;; Generated autoloads from symex-evil-support.el

(register-definition-prefixes "symex-evil-support" '("symex--define-evil-key"))


;;; Generated autoloads from symex-hydra.el

(register-definition-prefixes "symex-hydra" '("hydra-symex" "symex-"))


;;; Generated autoloads from symex-interface.el

(register-definition-prefixes "symex-interface" '("symex-"))


;;; Generated autoloads from symex-interface-arc.el

(register-definition-prefixes "symex-interface-arc" '("symex-"))


;;; Generated autoloads from symex-interface-builtins.el

(register-definition-prefixes "symex-interface-builtins" '("symex-register-builtin-interfaces"))


;;; Generated autoloads from symex-interface-clojure.el

(register-definition-prefixes "symex-interface-clojure" '("symex-"))


;;; Generated autoloads from symex-interface-common-lisp.el

(register-definition-prefixes "symex-interface-common-lisp" '("symex-"))


;;; Generated autoloads from symex-interface-elisp.el

(register-definition-prefixes "symex-interface-elisp" '("symex-"))


;;; Generated autoloads from symex-interface-fennel.el

(register-definition-prefixes "symex-interface-fennel" '("symex-"))


;;; Generated autoloads from symex-interface-racket.el

(register-definition-prefixes "symex-interface-racket" '("symex-"))


;;; Generated autoloads from symex-interface-scheme.el

(register-definition-prefixes "symex-interface-scheme" '("symex-"))


;;; Generated autoloads from symex-interop.el

(register-definition-prefixes "symex-interop" '("symex-"))


;;; Generated autoloads from symex-misc.el

(register-definition-prefixes "symex-misc" '("symex-"))


;;; Generated autoloads from symex-primitives.el

(register-definition-prefixes "symex-primitives" '("symex-"))


;;; Generated autoloads from symex-primitives-lisp.el

(register-definition-prefixes "symex-primitives-lisp" '("symex-"))


;;; Generated autoloads from symex-transformations.el

(register-definition-prefixes "symex-transformations" '("symex-"))


;;; Generated autoloads from symex-transformations-lisp.el

(register-definition-prefixes "symex-transformations-lisp" '("symex-lisp--"))


;;; Generated autoloads from symex-transformations-ts.el

(register-definition-prefixes "symex-transformations-ts" '("symex-ts-"))


;;; Generated autoloads from symex-traversals.el

(register-definition-prefixes "symex-traversals" '("symex-"))


;;; Generated autoloads from symex-ts.el

(register-definition-prefixes "symex-ts" '("symex-ts-"))


;;; Generated autoloads from symex-ui.el

(register-definition-prefixes "symex-ui" '("symex--"))


;;; Generated autoloads from symex-utils.el

(register-definition-prefixes "symex-utils" '("symex--"))


;;; Generated autoloads from symex-utils-ts.el

(register-definition-prefixes "symex-utils-ts" '("symex-ts--delete-current-line-if-empty"))

;;; End of scraped data

(provide 'symex-autoloads)

;; Local Variables:
;; version-control: never
;; no-byte-compile: t
;; no-update-autoloads: t
;; no-native-compile: t
;; coding: utf-8-emacs-unix
;; End:

;;; symex-autoloads.el ends here
