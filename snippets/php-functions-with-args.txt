addcslashes ( string str, string charlist ) 
   Quote string with slashes in a C style (string) 
addslashes ( string str ) 
   Quote string with slashes (string) 
bin2hex ( string str ) 
    Convert binary data into hexadecimal representation (string) 
chr ( int ascii ) 
   Return a specific character (string) 
chunk_split ( string body [, int chunklen [, string end]] ) 
   Split a string into smaller chunks (string) 
convert_cyr_string ( string str, string from, string to ) 
    Convert from one Cyrillic character set to another (string) 
count_chars ( string string [, int mode] ) 
    Return information about characters used in a string (mixed) 
crc32 ( string str ) 
   Calculates the crc32 polynomial of a string (int) 
crypt ( string str [, string salt] ) 
   One-way string encryption (hashing) (string) 
echo ( string arg1 [, string ...] ) 
   Output one or more strings (void) 
explode ( string separator, string string [, int limit] ) 
   Split a string by string (array) 
get_html_translation_table ( [int table [, int quote_style]] ) 
    Returns the translation table used by htmlspecialchars() and htmlentities() (array) 
hebrev ( string hebrew_text [, int max_chars_per_line] ) 
    Convert logical Hebrew text to visual text (string) 
hebrevc ( string hebrew_text [, int max_chars_per_line] ) 
    Convert logical Hebrew text to visual text with newline conversion (string) 
html_entity_decode ( string string [, int quote_style [, string charset]] ) 
    Convert all HTML entities to their applicable characters (string) 
htmlentities ( string string [, int quote_style [, string charset]] ) 
    Convert all applicable characters to HTML entities (string) 
htmlspecialchars_decode ( string string [, int quote_style] ) 
    Convert special HTML entities back to characters (string) 
htmlspecialchars ( string string [, int quote_style [, string charset]] ) 
    Convert special characters to HTML entities (string) 
implode ( string glue, array pieces ) 
   Join array elements with a string (string) 
levenshtein ( string str1, string str2 [, int cost_ins, int cost_rep, int cost_del] ) 
    Calculate Levenshtein distance between two strings (int) 
localeconv ( void ) 
   Get numeric formatting information (array) 
ltrim ( string str [, string charlist] ) 
    Strip whitespace (or other characters) from the beginning of a string (string) 
md5_file ( string filename [, bool raw_output] ) 
   Calculates the md5 hash of a given file (string) 
md5 ( string str [, bool raw_output] ) 
   Calculate the md5 hash of a string (string) 
metaphone ( string str [, int phones] ) 
   Calculate the metaphone key of a string (string) 
money_format ( string format, float number ) 
   Formats a number as a currency string (string) 
nl_langinfo ( int item ) 
    Query language and locale information (string) 
nl2br ( string string ) 
    Inserts HTML line breaks before all newlines in a string (string) 
number_format ( float number [, int decimals [, string dec_point, string thousands_sep]] ) 
   Format a number with grouped thousands (string) 
ord ( string string ) 
   Return ASCII value of character (int) 
parse_str ( string str [, array &arr] ) 
   Parses the string into variables (void) 
print ( string arg ) 
   Output a string (int) 
printf ( string format [, mixed args [, mixed ...]] ) 
   Output a formatted string (int) 
quoted_printable_decode ( string str ) 
    Convert a quoted-printable string to an 8 bit string (string) 
quotemeta ( string str ) 
   Quote meta characters (string) 
rtrim ( string str [, string charlist] ) 
    Strip whitespace (or other characters) from the end of a string (string) 
setlocale ( int category, string locale [, string ...] ) 
   Set locale information (string) 
cal_days_in_month ( int calendar, int month, int year ) 
   Return the number of days in a month for a given year and calendar (int) 
cal_from_jd ( int jd, int calendar ) 
   Converts from Julian Day Count to a supported calendar (array) 
cal_info ( [int calendar] ) 
   Returns information about a particular calendar (array) 
cal_to_jd ( int calendar, int month, int day, int year ) 
   Converts from a supported calendar to Julian Day Count (int) 
easter_date ( [int year] ) 
    Get Unix timestamp for midnight on Easter of a given year (int) 
easter_days ( [int year [, int method]] ) 
    Get number of days after March 21 on which Easter falls for a given year (int) 
frenchtojd ( int month, int day, int year ) 
    Converts a date from the French Republican Calendar to a Julian Day Count (int) 
gregoriantojd ( int month, int day, int year ) 
    Converts a Gregorian date to Julian Day Count (int) 
jddayofweek ( int julianday [, int mode] ) 
   Returns the day of the week (mixed) 
jdmonthname ( int julianday, int mode ) 
   Returns a month name (string) 
jdtofrench ( int juliandaycount ) 
    Converts a Julian Day Count to the French Republican Calendar (string) 
jdtogregorian ( int julianday ) 
   Converts Julian Day Count to Gregorian date (string) 
jdtojewish ( int juliandaycount [, bool hebrew [, int fl]] ) 
    Converts a Julian day count to a Jewish calendar date (string) 
jdtojulian ( int julianday ) 
    Converts a Julian Day Count to a Julian Calendar Date (string) 
jdtounix ( int jday ) 
   Convert Julian Day to Unix timestamp (int) 
jewishtojd ( int month, int day, int year ) 
    Converts a date in the Jewish Calendar to Julian Day Count (int) 
juliantojd ( int month, int day, int year ) 
    Converts a Julian Calendar date to Julian Day Count (int) 
unixtojd ( [int timestamp] ) 
   Convert Unix timestamp to Julian Day (int) 
ctype_alnum ( string text ) 
   Check for alphanumeric character(s) (bool) 
ctype_alpha ( string text ) 
   Check for alphabetic character(s) (bool) 
ctype_cntrl ( string text ) 
   Check for control character(s) (bool) 
ctype_digit ( string text ) 
   Check for numeric character(s) (bool) 
ctype_graph ( string text ) 
   Check for any printable character(s) except space (bool) 
ctype_lower ( string text ) 
   Check for lowercase character(s) (bool) 
ctype_print ( string text ) 
   Check for printable character(s) (bool) 
ctype_punct ( string text ) 
    Check for any printable character which is not whitespace or an alphanumeric character (bool) 
ctype_space ( string text ) 
   Check for whitespace character(s) (bool) 
ctype_upper ( string text ) 
   Check for uppercase character(s) (bool) 
ctype_xdigit ( string text ) 
    Check for character(s) representing a hexadecimal digit (bool) 
checkdate ( int month, int day, int year ) 
   Validate a Gregorian date (bool) 
date_default_timezone_get ( void ) 
    Gets the default timezone used by all date/time functions in a script (string) 
date_default_timezone_set ( string timezone_identifier ) 
    Sets the default timezone used by all date/time functions in a script (bool) 
date ( string format [, int timestamp] ) 
   Format a local time/date (string) 
getdate ( [int timestamp] ) 
   Get date/time information (array) 
gettimeofday ( [bool return_float] ) 
   Get current time (mixed) 
gmdate ( string format [, int timestamp] ) 
   Format a GMT/UTC date/time (string) 
gmmktime ( [int hour [, int minute [, int second [, int month [, int day [, int year [, int is_dst]]]]]]] ) 
   Get Unix timestamp for a GMT date (int) 
gmstrftime ( string format [, int timestamp] ) 
   Format a GMT/UTC time/date according to locale settings (string) 
localtime ( [int timestamp [, bool is_associative]] ) 
   Get the local time (array) 
microtime ( [bool get_as_float] ) 
   Return current Unix timestamp with microseconds (mixed) 
mktime ( [int hour [, int minute [, int second [, int month [, int day [, int year [, int is_dst]]]]]]] ) 
   Get Unix timestamp for a date (int) 
strftime ( string format [, int timestamp] ) 
   Format a local time/date according to locale settings (string) 
strptime ( string date, string format ) 
    Parse a time/date generated with strftime() (array) 
strtotime ( string time [, int now] ) 
   Parse about any English textual datetime description into a Unix timestamp (int) 
time ( void ) 
   Return current Unix timestamp (int) 
dba_close ( resource handle ) 
   Close a DBA database (void) 
dba_delete ( string key, resource handle ) 
   Delete DBA entry specified by key (bool) 
dba_exists ( string key, resource handle ) 
   Check whether key exists (bool) 
dba_fetch ( string key, resource handle ) 
   Fetch data specified by key (string) 
dba_firstkey ( resource handle ) 
   Fetch first key (string) 
dba_handlers ( [bool full_info] ) 
   List all the handlers available (array) 
dba_insert ( string key, string value, resource handle ) 
   Insert entry (bool) 
dba_list ( void ) 
   List all open database files (array) 
dba_nextkey ( resource handle ) 
   Fetch next key (string) 
dba_open ( string path, string mode [, string handler [, mixed ...]] ) 
   Open database (resource) 
dba_optimize ( resource handle ) 
   Optimize database (bool) 
dba_popen ( string path, string mode [, string handler [, mixed ...]] ) 
   Open database persistently (resource) 
dba_replace ( string key, string value, resource handle ) 
   Replace or insert entry (bool) 
dba_sync ( resource handle ) 
   Synchronize database (bool) 
dio_close ( resource fd ) 
   Closes the file descriptor given by fd (void) 
dio_fcntl ( resource fd, int cmd [, mixed args] ) 
   Performs a c library fcntl on fd (mixed) 
dio_open ( string filename, int flags [, int mode] ) 
    Opens a new filename with specified permissions of flags and creation permissions of mode (resource) 
dio_read ( resource fd [, int len] ) 
   Reads bytes from a file descriptor (string) 
dio_seek ( resource fd, int pos [, int whence] ) 
   Seeks to pos on fd from whence (int) 
dio_stat ( resource fd ) 
    Gets stat information about the file descriptor fd (array) 
dio_tcsetattr ( resource fd, array options ) 
    Sets terminal attributes and baud rate for a serial port (bool) 
dio_truncate ( resource fd, int offset ) 
    Truncates file descriptor fd to offset bytes (bool) 
dio_write ( resource fd, string data [, int len] ) 
    Writes data to fd with optional truncation at length (int) 
chdir ( string directory ) 
   Change directory (bool) 
chroot ( string directory ) 
   Change the root directory (bool) 
closedir ( resource dir_handle ) 
   Close directory handle (void) 
getcwd ( void ) 
   Gets the current working directory (string) 
opendir ( string path [, resource context] ) 
   Open directory handle (resource) 
readdir ( resource dir_handle ) 
   Read entry from directory handle (string) 
rewinddir ( resource dir_handle ) 
   Rewind directory handle (void) 
basename ( string path [, string suffix] ) 
   Returns filename component of path (string) 
chgrp ( string filename, mixed group ) 
   Changes file group (bool) 
chmod ( string filename, int mode ) 
   Changes file mode (bool) 
chown ( string filename, mixed user ) 
   Changes file owner (bool) 
clearstatcache ( void ) 
   Clears file status cache (void) 
copy ( string source, string dest ) 
   Copies file (bool) 
dirname ( string path ) 
   Returns directory name component of path (string) 
disk_free_space ( string directory ) 
   Returns available space in directory (float) 
disk_total_space ( string directory ) 
   Returns the total size of a directory (float) 
fclose ( resource handle ) 
   Closes an open file pointer (bool) 
feof ( resource handle ) 
   Tests for end-of-file on a file pointer (bool) 
fflush ( resource handle ) 
   Flushes the output to a file (bool) 
fgetc ( resource handle ) 
   Gets character from file pointer (string) 
fgetcsv ( resource handle [, int length [, string delimiter [, string enclosure]]] ) 
   Gets line from file pointer and parse for CSV fields (array) 
fgets ( resource handle [, int length] ) 
   Gets line from file pointer (string) 
fgetss ( resource handle [, int length [, string allowable_tags]] ) 
   Gets line from file pointer and strip HTML tags (string) 
file_exists ( string filename ) 
   Checks whether a file or directory exists (bool) 
file_get_contents ( string filename [, bool use_include_path [, resource context [, int offset [, int maxlen]]]] ) 
   Reads entire file into a string (string) 
file ( string filename [, int use_include_path [, resource context]] ) 
   Reads entire file into an array (array) 
ftp_cdup ( resource ftp_stream ) 
   Changes to the parent directory (bool) 
ftp_chdir ( resource ftp_stream, string directory ) 
   Changes the current directory on a FTP server (bool) 
ftp_close ( resource ftp_stream ) 
   Closes an FTP connection (bool) 
ftp_connect ( string host [, int port [, int timeout]] ) 
   Opens an FTP connection (resource) 
ftp_delete ( resource ftp_stream, string path ) 
   Deletes a file on the FTP server (bool) 
ftp_exec ( resource ftp_stream, string command ) 
   Requests execution of a program on the FTP server (bool) 
ftp_fget ( resource ftp_stream, resource handle, string remote_file, int mode [, int resumepos] ) 
   Downloads a file from the FTP server and saves to an open file (bool) 
ftp_fput ( resource ftp_stream, string remote_file, resource handle, int mode [, int startpos] ) 
   Uploads from an open file to the FTP server (bool) 
ftp_get_option ( resource ftp_stream, int option ) 
   Retrieves various runtime behaviours of the current FTP stream (mixed) 
ftp_get ( resource ftp_stream, string local_file, string remote_file, int mode [, int resumepos] ) 
   Downloads a file from the FTP server (bool) 
ftp_login ( resource ftp_stream, string username, string password ) 
   Logs in to an FTP connection (bool) 
ftp_mdtm ( resource ftp_stream, string remote_file ) 
   Returns the last modified time of the given file (int) 
ftp_mkdir ( resource ftp_stream, string directory ) 
   Creates a directory (string) 
ftp_nb_continue ( resource ftp_stream ) 
   Continues retrieving/sending a file (non-blocking) (int) 
ftp_nb_fget ( resource ftp_stream, resource handle, string remote_file, int mode [, int resumepos] ) 
   Retrieves a file from the FTP server and writes it to an open file (non-blocking) (int) 
ftp_nb_fput ( resource ftp_stream, string remote_file, resource handle, int mode [, int startpos] ) 
   Stores a file from an open file to the FTP server (non-blocking) (int) 
ftp_nb_get ( resource ftp_stream, string local_file, string remote_file, int mode [, int resumepos] ) 
   Retrieves a file from the FTP server and writes it to a local file (non-blocking) (int) 
ftp_nb_put ( resource ftp_stream, string remote_file, string local_file, int mode [, int startpos] ) 
   Stores a file on the FTP server (non-blocking) (int) 
ftp_nlist ( resource ftp_stream, string directory ) 
   Returns a list of files in the given directory (array) 
ftp_pasv ( resource ftp_stream, bool pasv ) 
   Turns passive mode on or off (bool) 
ftp_put ( resource ftp_stream, string remote_file, string local_file, int mode [, int startpos] ) 
   Uploads a file to the FTP server (bool) 
ftp_pwd ( resource ftp_stream ) 
   Returns the current directory name (string) 
ftp_rawlist ( resource ftp_stream, string directory [, bool recursive] ) 
   Returns a detailed list of files in the given directory (array) 
ftp_rename ( resource ftp_stream, string oldname, string newname ) 
   Renames a file or a directory on the FTP server (bool) 
ftp_rmdir ( resource ftp_stream, string directory ) 
   Removes a directory (bool) 
ftp_set_option ( resource ftp_stream, int option, mixed value ) 
   Set miscellaneous runtime FTP options (bool) 
ftp_site ( resource ftp_stream, string command ) 
   Sends a SITE command to the server (bool) 
ftp_size ( resource ftp_stream, string remote_file ) 
   Returns the size of the given file (int) 
ftp_ssl_connect ( string host [, int port [, int timeout]] ) 
   Opens an Secure SSL-FTP connection (resource) 
ftp_systype ( resource ftp_stream ) 
   Returns the system type identifier of the remote FTP server (string) 
call_user_func_array ( callback function, array param_arr ) 
    Call a user function given with an array of parameters (mixed) 
call_user_func ( callback function [, mixed parameter [, mixed ...]] ) 
    Call a user function given by the first parameter (mixed) 
create_function ( string args, string code ) 
   Create an anonymous (lambda-style) function (string) 
func_get_arg ( int arg_num ) 
   Return an item from the argument list (mixed) 
func_get_args ( void ) 
    Returns an array comprising a function's argument list (array) 
func_num_args ( void ) 
    Returns the number of arguments passed to the function (int) 
function_exists ( string function_name ) 
    Return TRUE if the given function has been defined (bool) 
get_defined_functions ( void ) 
    Returns an array of all defined functions (array) 
register_shutdown_function ( callback function [, mixed parameter [, mixed ...]] ) 
    Register a function for execution on shutdown (void) 
register_tick_function ( callback function [, mixed arg [, mixed ...]] ) 
    Register a function for execution on each tick (bool) 
unregister_tick_function ( string function_name ) 
    De-register a function for execution on each tick (void) 
header ( string string [, bool replace [, int http_response_code]] ) 
   Send a raw HTTP header (void) 
headers_sent ( [string &file [, int &line]] ) 
   Checks if or where headers have been sent (bool) 
setcookie ( string name [, string value [, int expire [, string path [, string domain [, bool secure]]]]] ) 
   Send a cookie (bool) 
gd_info ( void ) 
   Retrieve information about the currently installed GD library (array) 
getimagesize ( string filename [, array &imageinfo] ) 
   Get the size of an image (array) 
image_type_to_mime_type ( int imagetype ) 
   Get Mime-Type for image-type returned by getimagesize, exif_read_data, exif_thumbnail, exif_imagetype (string) 
image2wbmp ( resource image [, string filename [, int threshold]] ) 
   Output image to browser or file (int) 
imagealphablending ( resource image, bool blendmode ) 
   Set the blending mode for an image (bool) 
imageantialias ( resource im, bool on ) 
    Should antialias functions be used or not (bool) 
imagearc ( resource image, int cx, int cy, int w, int h, int s, int e, int color ) 
   Draw a partial ellipse (bool) 
imagechar ( resource image, int font, int x, int y, string c, int color ) 
   Draw a character horizontally (bool) 
imagecharup ( resource image, int font, int x, int y, string c, int color ) 
   Draw a character vertically (bool) 
imagecolorallocate ( resource image, int red, int green, int blue ) 
   Allocate a color for an image (int) 
imagecolorallocatealpha ( resource image, int red, int green, int blue, int alpha ) 
   Allocate a color for an image (int) 
imagecolorat ( resource image, int x, int y ) 
   Get the index of the color of a pixel (int) 
imagecolorclosest ( resource image, int red, int green, int blue ) 
   Get the index of the closest color to the specified color (int) 
imagecolorclosestalpha ( resource image, int red, int green, int blue, int alpha ) 
   Get the index of the closest color to the specified color + alpha (int) 
imagecolorclosesthwb ( resource image, int red, int green, int blue ) 
    Get the index of the color which has the hue, white and blackness nearest to the given color (int) 
imagecolordeallocate ( resource image, int color ) 
   De-allocate a color for an image (bool) 
imagecolorexact ( resource image, int red, int green, int blue ) 
   Get the index of the specified color (int) 
imagecolorexactalpha ( resource image, int red, int green, int blue, int alpha ) 
   Get the index of the specified color + alpha (int) 
imagecolormatch ( resource image1, resource image2 ) 
    Makes the colors of the palette version of an image more closely match the true color version (bool) 
imagecolorresolve ( resource image, int red, int green, int blue ) 
    Get the index of the specified color or its closest possible alternative (int) 
imagecolorresolvealpha ( resource image, int red, int green, int blue, int alpha ) 
    Get the index of the specified color + alpha or its closest possible alternative (int) 
imagecolorset ( resource image, int index, int red, int green, int blue ) 
   Set the color for the specified palette index (void) 
imagecolorsforindex ( resource image, int index ) 
   Get the colors for an index (array) 
imagecolorstotal ( resource image ) 
   Find out the number of colors in an image's palette (int) 
imagecolortransparent ( resource image [, int color] ) 
   Define a color as transparent (int) 
imageconvolution ( resource image, array matrix3x3, float div, float offset ) 
    Apply a 3x3 convolution matrix, using coefficient div and offset (bool) 
imagecopy ( resource dst_im, resource src_im, int dst_x, int dst_y, int src_x, int src_y, int src_w, int src_h ) 
   Copy part of an image (bool) 
imagecopymerge ( resource dst_im, resource src_im, int dst_x, int dst_y, int src_x, int src_y, int src_w, int src_h, int pct ) 
   Copy and merge part of an image (bool) 
imagecopymergegray ( resource dst_im, resource src_im, int dst_x, int dst_y, int src_x, int src_y, int src_w, int src_h, int pct ) 
   Copy and merge part of an image with gray scale (bool) 
imagecopyresampled ( resource dst_image, resource src_image, int dst_x, int dst_y, int src_x, int src_y, int dst_w, int dst_h, int src_w, int src_h ) 
   Copy and resize part of an image with resampling (bool) 
imagecopyresized ( resource dst_image, resource src_image, int dst_x, int dst_y, int src_x, int src_y, int dst_w, int dst_h, int src_w, int src_h ) 
   Copy and resize part of an image (bool) 
imagecreate ( int x_size, int y_size ) 
   Create a new palette based image (resource) 
imagecreatefromgd2 ( string filename ) 
   Create a new image from GD2 file or URL (resource) 
imagecreatefromgd2part ( string filename, int srcX, int srcY, int width, int height ) 
   Create a new image from a given part of GD2 file or URL (resource) 
imagecreatefromgd ( string filename ) 
   Create a new image from GD file or URL (resource) 
imagecreatefromgif ( string filename ) 
   Create a new image from file or URL (resource) 
imagecreatefromjpeg ( string filename ) 
   Create a new image from file or URL (resource) 
imap_8bit ( string string ) 
    Convert an 8bit string to a quoted-printable string (string) 
imap_alerts ( void ) 
    This function returns all IMAP alert messages (if any) that have occurred during this page request or since the alert stack was reset (array) 
imap_append ( resource imap_stream, string mbox, string message [, string options] ) 
    Append a string message to a specified mailbox (bool) 
imap_base64 ( string text ) 
   Decode BASE64 encoded text (string) 
imap_binary ( string string ) 
    Convert an 8bit string to a base64 string (string) 
imap_body ( resource imap_stream, int msg_number [, int options] ) 
   Read the message body (string) 
imap_bodystruct ( resource stream_id, int msg_no, string section ) 
    Read the structure of a specified body section of a specific message (object) 
imap_check ( resource imap_stream ) 
   Check current mailbox (object) 
imap_clearflag_full ( resource stream, string sequence, string flag [, string options] ) 
   Clears flags on messages (bool) 
imap_close ( resource imap_stream [, int flag] ) 
   Close an IMAP stream (bool) 
imap_createmailbox ( resource imap_stream, string mbox ) 
   Create a new mailbox (bool) 
imap_delete ( int imap_stream, int msg_number [, int options] ) 
    Mark a message for deletion from current mailbox (bool) 
imap_deletemailbox ( resource imap_stream, string mbox ) 
   Delete a mailbox (bool) 
imap_errors ( void ) 
    This function returns all of the IMAP errors (if any) that have occurred during this page request or since the error stack was reset (array) 
imap_expunge ( resource imap_stream ) 
   Delete all messages marked for deletion (bool) 
imap_fetch_overview ( resource imap_stream, string sequence [, int options] ) 
    Read an overview of the information in the headers of the given message (array) 
imap_fetchbody ( resource imap_stream, int msg_number, string part_number [, int options] ) 
    Fetch a particular section of the body of the message (string) 
imap_fetchheader ( resource imap_stream, int msgno [, int options] ) 
   Returns header for a message (string) 
imap_fetchstructure ( resource imap_stream, int msg_number [, int options] ) 
    Read the structure of a particular message (object) 
imap_get_quota ( resource imap_stream, string quota_root ) 
    Retrieve the quota level settings, and usage statics per mailbox (array) 
imap_get_quotaroot ( resource imap_stream, string quota_root ) 
    Retrieve the quota settings per user (array) 
imap_getmailboxes ( resource imap_stream, string ref, string pattern ) 
    Read the list of mailboxes, returning detailed information on each one (array) 
imap_getsubscribed ( resource imap_stream, string ref, string pattern ) 
   List all the subscribed mailboxes (array) 
imap_headerinfo ( resource imap_stream, int msg_number [, int fromlength [, int subjectlength [, string defaulthost]]] ) 
   Read the header of the message (object) 
imap_headers ( resource imap_stream ) 
    Returns headers for all messages in a mailbox (array) 
imap_last_error ( void ) 
    This function returns the last IMAP error (if any) that occurred during this page request (string) 
imap_list ( resource imap_stream, string ref, string pattern ) 
   Read the list of mailboxes (array) 
imap_lsub ( resource imap_stream, string ref, string pattern ) 
   List all the subscribed mailboxes (array) 
imap_mail_compose ( array envelope, array body ) 
    Create a MIME message based on given envelope and body sections (string) 
imap_mail_copy ( resource imap_stream, string msglist, string mbox [, int options] ) 
   Copy specified messages to a mailbox (bool) 
imap_mail_move ( resource imap_stream, string msglist, string mbox [, int options] ) 
   Move specified messages to a mailbox (bool) 
imap_mail ( string to, string subject, string message [, string additional_headers [, string cc [, string bcc [, string rpath]]]] ) 
    Send an email message (bool) 
imap_mailboxmsginfo ( resource imap_stream ) 
   Get information about the current mailbox (object) 
imap_mime_header_decode ( string text ) 
   Decode MIME header elements (array) 
imap_msgno ( resource imap_stream, int uid ) 
    This function returns the message sequence number for the given UID (int) 
imap_num_msg ( resource imap_stream ) 
    Gives the number of messages in the current mailbox (int) 
imap_num_recent ( resource imap_stream ) 
   Gives the number of recent messages in current mailbox (int) 
imap_open ( string mailbox, string username, string password [, int options] ) 
   Open an IMAP stream to a mailbox (resource) 
imap_ping ( resource imap_stream ) 
   Check if the IMAP stream is still active (bool) 
imap_qprint ( string string ) 
   Convert a quoted-printable string to an 8 bit string (string) 
imap_renamemailbox ( resource imap_stream, string old_mbox, string new_mbox ) 
   Rename an old mailbox to new mailbox (bool) 
imap_reopen ( resource imap_stream, string mailbox [, int options] ) 
   Reopen IMAP stream to new mailbox (bool) 
imap_rfc822_parse_adrlist ( string address, string default_host ) 
   Parses an address string (array) 
imap_rfc822_parse_headers ( string headers [, string defaulthost] ) 
   Parse mail headers from a string (object) 
imap_rfc822_write_address ( string mailbox, string host, string personal ) 
    Returns a properly formatted email address given the mailbox, host, and personal info (string) 
imap_search ( resource imap_stream, string criteria [, int options [, string charset]] ) 
    This function returns an array of messages matching the given search criteria (array) 
imap_set_quota ( resource imap_stream, string quota_root, int quota_limit ) 
   Sets a quota for a given mailbox (bool) 
imap_setacl ( resource stream_id, string mailbox, string id, string rights ) 
    Sets the ACL for a giving mailbox (bool) 
imap_setflag_full ( resource stream, string sequence, string flag [, string options] ) 
   Sets flags on messages (bool) 
imap_sort ( resource stream, int criteria, int reverse [, int options [, string search_criteria [, string charset]]] ) 
   Sort an array of message headers (array) 
imap_status ( resource imap_stream, string mailbox, int options ) 
    This function returns status information on a mailbox other than the current one (object) 
imap_subscribe ( resource imap_stream, string mbox ) 
   Subscribe to a mailbox (bool) 
imap_thread ( resource stream_id [, int options] ) 
    Returns a tree of threaded message (array) 
imap_timeout ( int timeout_type [, int timeout] ) 
    Set or fetch imap timeout (mixed) 
imap_uid ( resource imap_stream, int msgno ) 
    This function returns the UID for the given message sequence number (int) 
imap_undelete ( resource imap_stream, int msg_number [, int flags] ) 
    Unmark the message which is marked deleted (bool) 
imap_unsubscribe ( string imap_stream, string mbox ) 
   Unsubscribe from a mailbox (bool) 
imap_utf7_decode ( string text ) 
    Decodes a modified UTF-7 encoded string (string) 
imap_utf7_encode ( string data ) 
    Converts ISO-8859-1 string to modified UTF-7 text (string) 
imap_utf8 ( string mime_encoded_text ) 
    Converts MIME-encoded text to UTF-8 (string) 
ezmlm_hash ( string addr ) 
   Calculate the hash value needed by EZMLM (int) 
mail ( string to, string subject, string message [, string additional_headers [, string additional_parameters]] ) 
   Send mail (bool) 
abs ( mixed number ) 
   Absolute value (number) 
acos ( float arg ) 
   Arc cosine (float) 
acosh ( float arg ) 
   Inverse hyperbolic cosine (float) 
asin ( float arg ) 
   Arc sine (float) 
asinh ( float arg ) 
   Inverse hyperbolic sine (float) 
atan2 ( float y, float x ) 
   Arc tangent of two variables (float) 
atan ( float arg ) 
   Arc tangent (float) 
atanh ( float arg ) 
   Inverse hyperbolic tangent (float) 
base_convert ( string number, int frombase, int tobase ) 
   Convert a number between arbitrary bases (string) 
bindec ( string binary_string ) 
   Binary to decimal (number) 
ceil ( float value ) 
   Round fractions up (float) 
cos ( float arg ) 
   Cosine (float) 
cosh ( float arg ) 
   Hyperbolic cosine (float) 
decbin ( int number ) 
   Decimal to binary (string) 
dechex ( int number ) 
   Decimal to hexadecimal (string) 
decoct ( int number ) 
   Decimal to octal (string) 
deg2rad ( float number ) 
    Converts the number in degrees to the radian equivalent (float) 
exp ( float arg ) 
   Calculates the exponent of e (float) 
expm1 ( float number ) 
    Returns exp(number) - 1, computed in a way that is accurate even when the value of number is close to zero (float) 
floor ( float value ) 
   Round fractions down (float) 
fmod ( float x, float y ) 
   Returns the floating point remainder (modulo) of the division of the arguments (float) 
getrandmax ( void ) 
   Show largest possible random value (int) 
hexdec ( string hex_string ) 
   Hexadecimal to decimal (number) 
hypot ( float x, float y ) 
    Calculate the length of the hypotenuse of a right-angle triangle (float) 
is_finite ( float val ) 
   Finds whether a value is a legal finite number (bool) 
is_infinite ( float val ) 
   Finds whether a value is infinite (bool) 
is_nan ( float val ) 
   Finds whether a value is not a number (bool) 
lcg_value ( void ) 
   Combined linear congruential generator (float) 
log10 ( float arg ) 
   Base-10 logarithm (float) 
log1p ( float number ) 
    Returns log(1 + number), computed in a way that is accurate even when the value of number is close to zero (float) 
log ( float arg [, float base] ) 
   Natural logarithm (float) 
max ( number arg1, number arg2 [, number ...] ) 
   Find highest value (mixed) 
min ( number arg1, number arg2 [, number ...] ) 
   Find lowest value (mixed) 
mt_getrandmax ( void ) 
   Show largest possible random value (int) 
mt_rand ( [int min, int max] ) 
   Generate a better random value (int) 
mt_srand ( [int seed] ) 
   Seed the better random number generator (void) 
octdec ( string octal_string ) 
   Octal to decimal (number) 
pi ( void ) 
   Get value of pi (float) 
pow ( number base, number exp ) 
   Exponential expression (number) 
rad2deg ( float number ) 
    Converts the radian number to the equivalent number in degrees (float) 
rand ( [int min, int max] ) 
   Generate a random integer (int) 
round ( float val [, int precision] ) 
   Rounds a float (float) 
sin ( float arg ) 
   Sine (float) 
sinh ( float arg ) 
   Hyperbolic sine (float) 
sqrt ( float arg ) 
   Square root (float) 
srand ( [int seed] ) 
   Seed the random number generator (void) 
tan ( float arg ) 
   Tangent (float) 
tanh ( float arg ) 
   Hyperbolic tangent (float) 
mhash_count ( void ) 
   Get the highest available hash id (int) 
mhash_get_block_size ( int hash ) 
   Get the block size of the specified hash (int) 
mhash_get_hash_name ( int hash ) 
   Get the name of the specified hash (string) 
mhash_keygen_s2k ( int hash, string password, string salt, int bytes ) 
   Generates a key (string) 
mhash ( int hash, string data [, string key] ) 
   Compute hash (string) 
connection_aborted ( void ) 
   Returns TRUE if client disconnected (int) 
connection_status ( void ) 
   Returns connection status bitfield (int) 
connection_timeout ( void ) 
   Return TRUE if script timed out (bool) 
constant ( string name ) 
   Returns the value of a constant (mixed) 
define ( string name, mixed value [, bool case_insensitive] ) 
   Defines a named constant (bool) 
defined ( string name ) 
    Checks whether a given named constant exists (bool) 
eval ( string code_str ) 
   Evaluate a string as PHP code (mixed) 
exit ( [string status] ) 
   Output a message and terminate the current script (void) 
get_browser ( [string user_agent [, bool return_array]] ) 
    Tells what the user's browser is capable of (mixed) 
highlight_file ( string filename [, bool return] ) 
   Syntax highlighting of a file (mixed) 
highlight_string ( string str [, bool return] ) 
   Syntax highlighting of a string (mixed) 
ignore_user_abort ( [bool setting] ) 
    Set whether a client disconnect should abort script execution (int) 
pack ( string format [, mixed args [, mixed ...]] ) 
   Pack data into binary string (string) 
php_check_syntax ( string file_name [, string &error_message] ) 
    Check the PHP syntax of (and execute) the specified file (bool) 
sleep ( int seconds ) 
   Delay execution (int) 
time_sleep_until ( float timestamp ) 
    Make the script sleep until the specified time (bool) 
uniqid ( [string prefix [, bool more_entropy]] ) 
   Generate a unique ID (string) 
unpack ( string format, string data ) 
   Unpack data from binary string (array) 
usleep ( int micro_seconds ) 
   Delay execution in microseconds (void) 
mysql_affected_rows ( [resource link_identifier] ) 
   Get number of affected rows in previous MySQL operation (int) 
mysql_change_user ( string user, string password [, string database [, resource link_identifier]] ) 
   Change logged in user of the active connection (int) 
mysql_client_encoding ( [resource link_identifier] ) 
   Returns the name of the character set (string) 
mysql_close ( [resource link_identifier] ) 
   Close MySQL connection (bool) 
mysql_connect ( [string server [, string username [, string password [, bool new_link [, int client_flags]]]]] ) 
   Open a connection to a MySQL Server (resource) 
mysql_create_db ( string database_name [, resource link_identifier] ) 
   Create a MySQL database (bool) 
mysql_data_seek ( resource result, int row_number ) 
   Move internal result pointer (bool) 
mysql_db_name ( resource result, int row [, mixed field] ) 
   Get result data (string) 
mysql_db_query ( string database, string query [, resource link_identifier] ) 
   Send a MySQL query (resource) 
mysql_drop_db ( string database_name [, resource link_identifier] ) 
   Drop (delete) a MySQL database (bool) 
mysql_errno ( [resource link_identifier] ) 
   Returns the numerical value of the error message from previous MySQL operation (int) 
mysql_error ( [resource link_identifier] ) 
   Returns the text of the error message from previous MySQL operation (string) 
mysql_escape_string ( string unescaped_string ) 
   Escapes a string for use in a mysql_query (string) 
mysql_fetch_array ( resource result [, int result_type] ) 
   Fetch a result row as an associative array, a numeric array, or both (array) 
mysql_fetch_assoc ( resource result ) 
   Fetch a result row as an associative array (array) 
mysql_fetch_field ( resource result [, int field_offset] ) 
   Get column information from a result and return as an object (object) 
mysql_fetch_lengths ( resource result ) 
   Get the length of each output in a result (array) 
mysql_fetch_object ( resource result ) 
   Fetch a result row as an object (object) 
mysql_fetch_row ( resource result ) 
   Get a result row as an enumerated array (array) 
mysql_field_flags ( resource result, int field_offset ) 
   Get the flags associated with the specified field in a result (string) 
mysql_field_len ( resource result, int field_offset ) 
   Returns the length of the specified field (int) 
mysql_field_name ( resource result, int field_offset ) 
   Get the name of the specified field in a result (string) 
mysql_field_seek ( resource result, int field_offset ) 
   Set result pointer to a specified field offset (bool) 
mysql_field_table ( resource result, int field_offset ) 
   Get name of the table the specified field is in (string) 
mysql_field_type ( resource result, int field_offset ) 
   Get the type of the specified field in a result (string) 
mysql_free_result ( resource result ) 
   Free result memory (bool) 
mysql_get_client_info ( void ) 
   Get MySQL client info (string) 
mysql_get_host_info ( [resource link_identifier] ) 
   Get MySQL host info (string) 
mysql_get_proto_info ( [resource link_identifier] ) 
   Get MySQL protocol info (int) 
mysql_get_server_info ( [resource link_identifier] ) 
   Get MySQL server info (string) 
mysql_info ( [resource link_identifier] ) 
   Get information about the most recent query (string) 
mysql_insert_id ( [resource link_identifier] ) 
   Get the ID generated from the previous INSERT operation (int) 
mysql_list_dbs ( [resource link_identifier] ) 
   List databases available on a MySQL server (resource) 
mysql_list_fields ( string database_name, string table_name [, resource link_identifier] ) 
   List MySQL table fields (resource) 
mysql_list_processes ( [resource link_identifier] ) 
   List MySQL processes (resource) 
mysql_list_tables ( string database [, resource link_identifier] ) 
   List tables in a MySQL database (resource) 
mysql_num_fields ( resource result ) 
   Get number of fields in result (int)  
mysql_num_rows ( resource result ) 
   Get number of rows in result (int) 
mysql_pconnect ( [string server [, string username [, string password [, int client_flags]]]] ) 
   Open a persistent connection to a MySQL server (resource) 
mysql_ping ( [resource link_identifier] ) 
   Ping a server connection or reconnect if there is no connection (bool) 
mysql_query ( string query [, resource link_identifier] ) 
   Send a MySQL query (resource) 
mysql_real_escape_string ( string unescaped_string [, resource link_identifier] ) 
   Escapes special characters in a string for use in a SQL statement (string) 
mysql_result ( resource result, int row [, mixed field] ) 
   Get result data (string) 
mysql_select_db ( string database_name [, resource link_identifier] ) 
   Select a MySQL database (bool) 
mysql_stat ( [resource link_identifier] ) 
   Get current system status (string) 
mysql_tablename ( resource result, int i ) 
   Get table name of field (string) 
mysql_thread_id ( [resource link_identifier] ) 
   Return the current thread ID (int) 
mysql_unbuffered_query ( string query [, resource link_identifier] ) 
   Send an SQL query to MySQL, without fetching and buffering the result rows (resource) 
mysqli_embedded_connect ( [string dbname] ) 
   Open a connection to an embedded mysql server (mysqli) 
mysqli_server_end ( void ) 
   Shut down the embedded server (void) 
mysqli_server_init ( [array server [, array groups]] ) 
   Initialize embedded server (bool) 
checkdnsrr ( string host [, string type] ) 
    Check DNS records corresponding to a given Internet host name or IP address (int) 
closelog ( void ) 
   Close connection to system logger (bool) 
debugger_off ( void ) 
   Disable internal PHP debugger (PHP 3) (int) 
debugger_on ( string address ) 
   Enable internal PHP debugger (PHP 3) (int) 
define_syslog_variables ( void ) 
   Initializes all syslog related constants (void) 
fsockopen ( string target [, int port [, int &errno [, string &errstr [, float timeout]]]] ) 
    Open Internet or Unix domain socket connection (resource) 
gethostbyaddr ( string ip_address ) 
    Get the Internet host name corresponding to a given IP address (string) 
gethostbyname ( string hostname ) 
    Get the IP address corresponding to a given Internet host name (string) 
gethostbynamel ( string hostname ) 
    Get a list of IP addresses corresponding to a given Internet host name (array) 
getmxrr ( string hostname, array &mxhosts [, array &weight] ) 
    Get MX records corresponding to a given Internet host name (bool) 
getprotobyname ( string name ) 
    Get protocol number associated with protocol name (int) 
getprotobynumber ( int number ) 
    Get protocol name associated with protocol number (string) 
getservbyname ( string service, string protocol ) 
    Get port number associated with an Internet service and protocol (int) 
getservbyport ( int port, string protocol ) 
    Get Internet service which corresponds to port and protocol (string) 
inet_ntop ( string in_addr ) 
    Converts a packed internet address to a human readable representation (string) 
inet_pton ( string address ) 
    Converts a human readable IP address to its packed in_addr representation (string) 
ip2long ( string ip_address ) 
    Converts a string containing an (IPv4) Internet Protocol dotted address into a proper address (int) 
long2ip ( int proper_address ) 
    Converts an (IPv4) Internet network address into a string in Internet standard dotted format (string) 
openlog ( string ident, int option, int facility ) 
   Open connection to system logger (bool) 
pfsockopen ( string hostname [, int port [, int &errno [, string &errstr [, float timeout]]]] ) 
    Open persistent Internet or Unix domain socket connection (resource) 
syslog ( int priority, string message ) 
   Generate a system log message (bool) 
odbc_autocommit ( resource connection_id [, bool OnOff] ) 
   Toggle autocommit behaviour (mixed) 
odbc_binmode ( resource result_id, int mode ) 
   Handling of binary column data (bool) 
odbc_close_all ( void ) 
   Close all ODBC connections (void) 
odbc_close ( resource connection_id ) 
   Close an ODBC connection (void) 
odbc_columnprivileges ( resource connection_id, string qualifier, string owner, string table_name, string column_name ) 
    Returns a result identifier that can be used to fetch a list of columns and associated privileges (resource) 
odbc_columns ( resource connection_id [, string qualifier [, string schema [, string table_name [, string column_name]]]] ) 
    Lists the column names in specified tables (resource) 
odbc_commit ( resource connection_id ) 
   Commit an ODBC transaction (bool) 
odbc_connect ( string dsn, string user, string password [, int cursor_type] ) 
   Connect to a datasource (resource) 
odbc_cursor ( resource result_id ) 
   Get cursorname (string) 
odbc_data_source ( resource connection_id, int fetch_type ) 
   Returns information about a current connection (array) 
odbc_do ( resource conn_id, string query ) 
   Synonym for odbc_exec() (resource) 
odbc_error ( [resource connection_id] ) 
   Get the last error code (string) 
odbc_errormsg ( [resource connection_id] ) 
   Get the last error message (string) 
odbc_exec ( resource connection_id, string query_string [, int flags] ) 
   Prepare and execute a SQL statement (resource) 
odbc_execute ( resource result_id [, array parameters_array] ) 
   Execute a prepared statement (bool) 
odbc_fetch_array ( resource result [, int rownumber] ) 
   Fetch a result row as an associative array (array) 
odbc_fetch_into ( resource result_id, array &result_array [, int rownumber] ) 
   Fetch one result row into array (int) 
odbc_fetch_object ( resource result [, int rownumber] ) 
   Fetch a result row as an object (object) 
odbc_fetch_row ( resource result_id [, int row_number] ) 
   Fetch a row (bool) 
odbc_field_len ( resource result_id, int field_number ) 
   Get the length (precision) of a field (int) 
odbc_field_name ( resource result_id, int field_number ) 
   Get the columnname (string) 
odbc_field_num ( resource result_id, string field_name ) 
   Return column number (int) 
odbc_field_precision ( resource result_id, int field_number ) 
   Synonym for odbc_field_len() (int) 
odbc_field_scale ( resource result_id, int field_number ) 
   Get the scale of a field (int) 
odbc_field_type ( resource result_id, int field_number ) 
   Datatype of a field (string) 
odbc_foreignkeys ( resource connection_id, string pk_qualifier, string pk_owner, string pk_table, string fk_qualifier, string fk_owner, string fk_table ) 
    Returns a list of foreign keys in the specified table or a list of foreign keys in other tables that refer to the primary key in the specified table (resource) 
odbc_free_result ( resource result_id ) 
   Free resources associated with a result (bool) 
odbc_gettypeinfo ( resource connection_id [, int data_type] ) 
    Returns a result identifier containing information about data types supported by the data source (resource) 
odbc_longreadlen ( resource result_id, int length ) 
   Handling of LONG columns (bool) 
odbc_next_result ( resource result_id ) 
    Checks if multiple results are available (bool) 
odbc_num_fields ( resource result_id ) 
   Number of columns in a result (int) 
odbc_num_rows ( resource result_id ) 
   Number of rows in a result (int) 
odbc_pconnect ( string dsn, string user, string password [, int cursor_type] ) 
   Open a persistent database connection (resource) 
odbc_prepare ( resource connection_id, string query_string ) 
   Prepares a statement for execution (resource) 
odbc_primarykeys ( resource connection_id, string qualifier, string owner, string table ) 
    Returns a result identifier that can be used to fetch the column names that comprise the primary key for a table (resource) 
odbc_procedurecolumns ( resource connection_id [, string qualifier, string owner, string proc, string column] ) 
    Retrieve information about parameters to procedures (resource) 
odbc_procedures ( resource connection_id [, string qualifier, string owner, string name] ) 
    Get the list of procedures stored in a specific data source (resource) 
odbc_result_all ( resource result_id [, string format] ) 
   Print result as HTML table (int) 
odbc_result ( resource result_id, mixed field ) 
   Get result data (mixed) 
odbc_rollback ( resource connection_id ) 
   Rollback a transaction (bool) 
odbc_setoption ( resource id, int function, int option, int param ) 
    Adjust ODBC settings (bool) 
odbc_specialcolumns ( resource connection_id, int type, string qualifier, string owner, string table, int scope, int nullable ) 
    Returns either the optimal set of columns that uniquely identifies a row in the table or columns that are automatically updated when any value in the row is updated by a transaction 
odbc_statistics ( resource connection_id, string qualifier, string owner, string table_name, int unique, int accuracy ) 
   Retrieve statistics about a table (resource) 
odbc_tableprivileges ( resource connection_id, string qualifier, string owner, string name ) 
    Lists tables and the privileges associated with each table (resource) 
odbc_tables ( resource connection_id [, string qualifier [, string owner [, string name [, string types]]]] )     Get the list of table names stored in a specific data source (resource) 
pcntl_alarm ( int seconds ) 
    Set an alarm clock for delivery of a signal (int) 
pcntl_exec ( string path [, array args [, array envs]] ) 
    Executes specified program in current process space (void) 
pcntl_fork ( void ) 
   Forks the currently running process (int) 
pcntl_signal ( int signo, callback handle [, bool restart_syscalls] ) 
   Installs a signal handler (bool) 
pcntl_waitpid ( int pid, int &status [, int options] ) 
   Waits on or returns the status of a forked child (int) 
pcntl_wexitstatus ( int status ) 
    Returns the return code of a terminated child (int) 
pcntl_wifexited ( int status ) 
    Returns TRUE if status code represents a successful exit (bool) 
pcntl_wifsignaled ( int status ) 
    Returns TRUE if status code represents a termination due to a signal (bool) 
pcntl_wifstopped ( int status ) 
    Returns TRUE if child process is currently stopped (bool) 
pcntl_wstopsig ( int status ) 
    Returns the signal which caused the child to stop (int) 
pcntl_wtermsig ( int status ) 
    Returns the signal which caused the child to terminate (int) 
posix_access ( string file [, int mode] ) 
    Determine accessibility of a file (bool) 
posix_ctermid ( void ) 
   Get path name of controlling terminal (string) 
posix_get_last_error ( void ) 
    Retrieve the error number set by the last posix function that failed (int) 
posix_getcwd ( void ) 
   Pathname of current directory (string) 
posix_getegid ( void ) 
    Return the effective group ID of the current process (int) 
posix_geteuid ( void ) 
    Return the effective user ID of the current process (int) 
posix_getgid ( void ) 
    Return the real group ID of the current process (int) 
posix_getgrgid ( int gid ) 
   Return info about a group by group id (array) 
posix_getgrnam ( string name ) 
   Return info about a group by name (array) 
posix_getgroups ( void ) 
    Return the group set of the current process (array) 
posix_getlogin ( void ) 
   Return login name (string) 
posix_getpgid ( int pid ) 
   Get process group id for job control (int) 
posix_getpgrp ( void ) 
    Return the current process group identifier (int) 
posix_getpid ( void ) 
   Return the current process identifier (int) 
posix_getppid ( void ) 
   Return the parent process identifier (int) 
posix_getpwnam ( string username ) 
   Return info about a user by username (array) 
posix_getpwuid ( int uid ) 
   Return info about a user by user id (array) 
posix_getrlimit ( void ) 
   Return info about system resource limits (array) 
posix_getsid ( int pid ) 
   Get the current sid of the process (int) 
posix_getuid ( void ) 
    Return the real user ID of the current process (int) 
posix_isatty ( int fd ) 
    Determine if a file descriptor is an interactive terminal (bool) 
posix_kill ( int pid, int sig ) 
   Send a signal to a process (bool) 
posix_mkfifo ( string pathname, int mode ) 
    Create a fifo special file (a named pipe) (bool) 
posix_mknod ( string pathname, int mode [, int major [, int minor]] ) 
    Create a special or ordinary file (POSIX.1) (bool) 
posix_setegid ( int gid ) 
    Set the effective GID of the current process (bool) 
posix_seteuid ( int uid ) 
    Set the effective UID of the current process (bool) 
posix_setgid ( int gid ) 
    Set the GID of the current process (bool) 
posix_setpgid ( int pid, int pgid ) 
   Set process group id for job control (bool) 
posix_setsid ( void ) 
   Make the current process a session leader (int) 
posix_setuid ( int uid ) 
    Set the UID of the current process (bool) 
posix_strerror ( int errno ) 
    Retrieve the system error message associated with the given errno (string) 
posix_times ( void ) 
   Get process times (array) 
posix_ttyname ( int fd ) 
   Determine terminal device name (string) 
posix_uname ( void ) 
   Get system name (array) 
escapeshellarg ( string arg ) 
   Escape a string to be used as a shell argument (string) 
escapeshellcmd ( string command ) 
   Escape shell metacharacters (string) 
exec ( string command [, array &output [, int &return_var]] ) 
   Execute an external program (string) 
passthru ( string command [, int &return_var] ) 
   Execute an external program and display raw output (void) 
proc_close ( resource process ) 
   Close a process opened by proc_open() and return the exit code of that process. (int) 
proc_open ( string cmd, array descriptorspec, array &pipes [, string cwd [, array env [, array other_options]]] ) 
    Execute a command and open file pointers for input/output (resource) 
shell_exec ( string cmd ) 
   Execute command via shell and return the complete output as a string (string) 
system ( string command [, int &return_var] ) 
   Execute an external program and display the output (string) 
ereg_replace ( string pattern, string replacement, string string ) 
   Replace regular expression (string) 
ereg ( string pattern, string string [, array &regs] ) 
   Regular expression match (int) 
eregi_replace ( string pattern, string replacement, string string ) 
   Replace regular expression case insensitive (string) 
eregi ( string pattern, string string [, array &regs] ) 
   Case insensitive regular expression match (int) 
split ( string pattern, string string [, int limit] ) 
   Split string into array by regular expression (array) 
spliti ( string pattern, string string [, int limit] ) 
    Split string into array by regular expression case insensitive (array) 
sql_regcase ( string string ) 
    Make regular expression for case insensitive match (string)  
session_cache_expire ( [int new_cache_expire] ) 
   Return current cache expire (int) 
session_cache_limiter ( [string cache_limiter] ) 
   Get and/or set the current cache limiter (string) 
session_decode ( string data ) 
   Decodes session data from a string (bool) 
session_destroy ( void ) 
   Destroys all data registered to a session (bool) 
session_encode ( void ) 
    Encodes the current session data as a string (string) 
session_get_cookie_params ( void ) 
    Get the session cookie parameters (array) 
session_id ( [string id] ) 
   Get and/or set the current session id (string) 
session_is_registered ( string name ) 
    Find out whether a global variable is registered in a session (bool) 
session_module_name ( [string module] ) 
   Get and/or set the current session module (string) 
session_name ( [string name] ) 
   Get and/or set the current session name (string) 
session_regenerate_id ( [bool delete_old_session] ) 
    Update the current session id with a newly generated one (bool) 
session_register ( mixed name [, mixed ...] ) 
    Register one or more global variables with the current session (bool) 
session_save_path ( [string path] ) 
   Get and/or set the current session save path (string) 
session_set_cookie_params ( int lifetime [, string path [, string domain [, bool secure]]] ) 
    Set the session cookie parameters (void) 
session_set_save_handler ( callback open, callback close, callback read, callback write, callback destroy, callback gc ) 
    Sets user-level session storage functions (bool) 
session_start ( void ) 
   Initialize session data (bool) 
session_unregister ( string name ) 
    Unregister a global variable from the current session (bool) 
session_unset ( void ) 
    Free all session variables (void) 
session_write_close ( void ) 
   Write session data and end session (void) 
addcslashes ( string str, string charlist ) 
   Quote string with slashes in a C style (string) 
addslashes ( string str ) 
   Quote string with slashes (string) 
bin2hex ( string str ) 
    Convert binary data into hexadecimal representation (string) 
chr ( int ascii ) 
   Return a specific character (string) 
chunk_split ( string body [, int chunklen [, string end]] ) 
   Split a string into smaller chunks (string) 
convert_cyr_string ( string str, string from, string to ) 
    Convert from one Cyrillic character set to another (string) 
count_chars ( string string [, int mode] ) 
    Return information about characters used in a string (mixed) 
crc32 ( string str ) 
   Calculates the crc32 polynomial of a string (int) 
crypt ( string str [, string salt] ) 
   One-way string encryption (hashing) (string) 
echo ( string arg1 [, string ...] ) 
   Output one or more strings (void) 
explode ( string separator, string string [, int limit] ) 
   Split a string by string (array) 
get_html_translation_table ( [int table [, int quote_style]] ) 
    Returns the translation table used by htmlspecialchars() and htmlentities() (array) 
hebrev ( string hebrew_text [, int max_chars_per_line] ) 
    Convert logical Hebrew text to visual text (string) 
hebrevc ( string hebrew_text [, int max_chars_per_line] ) 
    Convert logical Hebrew text to visual text with newline conversion (string) 
html_entity_decode ( string string [, int quote_style [, string charset]] ) 
    Convert all HTML entities to their applicable characters (string) 
htmlentities ( string string [, int quote_style [, string charset]] ) 
    Convert all applicable characters to HTML entities (string) 
htmlspecialchars_decode ( string string [, int quote_style] ) 
    Convert special HTML entities back to characters (string) 
htmlspecialchars ( string string [, int quote_style [, string charset]] ) 
    Convert special characters to HTML entities (string) 
implode ( string glue, array pieces ) 
   Join array elements with a string (string) 
levenshtein ( string str1, string str2 [, int cost_ins, int cost_rep, int cost_del] ) 
    Calculate Levenshtein distance between two strings (int) 
localeconv ( void ) 
   Get numeric formatting information (array) 
ltrim ( string str [, string charlist] ) 
    Strip whitespace (or other characters) from the beginning of a string (string) 
md5_file ( string filename [, bool raw_output] ) 
   Calculates the md5 hash of a given file (string) 
md5 ( string str [, bool raw_output] ) 
   Calculate the md5 hash of a string (string) 
metaphone ( string str [, int phones] ) 
   Calculate the metaphone key of a string (string) 
money_format ( string format, float number ) 
   Formats a number as a currency string (string) 
nl_langinfo ( int item ) 
    Query language and locale information (string) 
nl2br ( string string ) 
    Inserts HTML line breaks before all newlines in a string (string) 
number_format ( float number [, int decimals [, string dec_point, string thousands_sep]] ) 
   Format a number with grouped thousands (string) 
ord ( string string ) 
   Return ASCII value of character (int) 
parse_str ( string str [, array &arr] ) 
   Parses the string into variables (void) 
print ( string arg ) 
   Output a string (int) 
printf ( string format [, mixed args [, mixed ...]] ) 
   Output a formatted string (int) 
quoted_printable_decode ( string str ) 
    Convert a quoted-printable string to an 8 bit string (string) 
quotemeta ( string str ) 
   Quote meta characters (string) 
rtrim ( string str [, string charlist] ) 
    Strip whitespace (or other characters) from the end of a string (string) 
setlocale ( int category, string locale [, string ...] ) 
   Set locale information (string) 
trim ( string str [, string charlist] ) 
   Strip whitespace (or other characters) from the beginning and end of a string (string) 
ucfirst ( string str ) 
   Make a string's first character uppercase (string) 
ucwords ( string str ) 
    Uppercase the first character of each word in a string (string) 
vprintf ( string format, array args ) 
   Output a formatted string (int) 
vsprintf ( string format, array args ) 
   Return a formatted string (string) 
wordwrap ( string str [, int width [, string break [, bool cut]]] ) 
    Wraps a string to a given number of characters using a string break character (string) 
base64_decode ( string encoded_data ) 
   Decodes data encoded with MIME base64 (string) 
base64_encode ( string data ) 
   Encodes data with MIME base64 (string) 
get_meta_tags ( string filename [, bool use_include_path] ) 
   Extracts all meta tag content attributes from a file and returns an array (array) 
parse_url ( string url ) 
   Parse a URL and return its components (array) 
rawurldecode ( string str ) 
   Decode URL-encoded strings (string) 
rawurlencode ( string str ) 
   URL-encode according to RFC 1738 (string) 
urldecode ( string str ) 
   Decodes URL-encoded string (string) 
urlencode ( string str ) 
   URL-encodes string (string) 
debug_zval_dump ( mixed variable ) 
   Dumps a string representation of an internal zend value to output (void) 
empty ( mixed var ) 
   Determine whether a variable is empty (bool) 
floatval ( mixed var ) 
   Get float value of a variable (float) 
get_defined_vars ( void ) 
    Returns an array of all defined variables (array) 
get_resource_type ( resource handle ) 
    Returns the resource type (string) 
gettype ( mixed var ) 
   Get the type of a variable (string) 
import_request_variables ( string types [, string prefix] ) 
   Import GET/POST/Cookie variables into the global scope (bool) 
intval ( mixed var [, int base] ) 
   Get the integer value of a variable (int) 
is_array ( mixed var ) 
   Finds whether a variable is an array (bool) 
is_bool ( mixed var ) 
    Finds out whether a variable is a boolean (bool) 
is_callable ( mixed var [, bool syntax_only [, string &callable_name]] ) 
    Verify that the contents of a variable can be called as a function (bool) 
is_float ( mixed var ) 
   Finds whether a variable is a float (bool) 
is_int ( mixed var ) 
   Find whether a variable is an integer (bool) 
is_null ( mixed var ) 
    Finds whether a variable is NULL (bool) 
is_numeric ( mixed var ) 
    Finds whether a variable is a number or a numeric string (bool) 
is_object ( mixed var ) 
   Finds whether a variable is an object (bool) 
is_resource ( mixed var ) 
    Finds whether a variable is a resource (bool) 
is_scalar ( mixed var ) 
    Finds whether a variable is a scalar (bool) 
is_string ( mixed var ) 
   Finds whether a variable is a string (bool) 
isset ( mixed var [, mixed var [, ...]] ) 
   Determine whether a variable is set (bool) 
print_r ( mixed expression [, bool return] ) 
    Prints human-readable information about a variable (bool) 
serialize ( mixed value ) 
    Generates a storable representation of a value (string) 
settype ( mixed &var, string type ) 
   Set the type of a variable (bool) 
strval ( mixed var ) 
   Get string value of a variable (string) 
unserialize ( string str ) 
    Creates a PHP value from a stored representation (mixed) 
unset ( mixed var [, mixed var [, mixed ...]] ) 
   Unset a given variable (void) 
var_dump ( mixed expression [, mixed expression [, ...]] ) 
   Dumps information about a variable (void) 
var_export ( mixed expression [, bool return] ) 
   Outputs or returns a parsable string representation of a variable (mixed) 
 
 
 
 
 
