;;; poly-ansible-autoloads.el --- automatically extracted autoloads (do not edit)   -*- lexical-binding: t -*-
;; Generated by the `loaddefs-generate' function.

;; This file is part of GNU Emacs.

;;; Code:

(add-to-list 'load-path (or (and load-file-name (directory-file-name (file-name-directory load-file-name))) (car load-path)))



;;; Generated autoloads from poly-ansible.el

 (autoload 'poly-ansible-mode "poly-ansible" "Polymode for Jinja2 templating in Ansible YAML." t)
(add-to-list 'auto-mode-alist '("/ansible/.*\\.ya?ml\\'" . poly-ansible-mode))
(add-to-list 'auto-mode-alist '("/\\(?:group\\|host\\)_vars/" . poly-ansible-mode))
(register-definition-prefixes "poly-ansible" '("jinja2-ansible-functions-keywords"))


;;; Generated autoloads from poly-ansible-jinja2-filters.el

(register-definition-prefixes "poly-ansible-jinja2-filters" '("poly-ansible-jinja2-filters"))


;;; Generated autoloads from poly-jinja2.el

(register-definition-prefixes "poly-jinja2" '("poly-jinja2-innermode"))


;;; Generated autoloads from poly-systemd-jinja2.el

 (autoload 'poly-systemd-jinja2-mode "poly-systemd-jinja2" "Polymode for Jinja2 templating in Systemd units." t)
(add-to-list 'auto-mode-alist (cons (concat "/roles/.*/templates\\(?:/.*\\)?/" (replace-regexp-in-string "\\\\'$" "" systemd-autoload-regexp) "\\.j\\(?:inja\\)?2\\'") 'poly-systemd-jinja2-mode))
(register-definition-prefixes "poly-systemd-jinja2" '("poly-systemd-hostmode" "systemd-file-podman-p-jinja2-advice"))

;;; End of scraped data

(provide 'poly-ansible-autoloads)

;; Local Variables:
;; version-control: never
;; no-byte-compile: t
;; no-update-autoloads: t
;; no-native-compile: t
;; coding: utf-8-emacs-unix
;; End:

;;; poly-ansible-autoloads.el ends here
