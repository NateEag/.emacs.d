;;; osm-autoloads.el --- automatically extracted autoloads (do not edit)   -*- lexical-binding: t -*-
;; Generated by the `loaddefs-generate' function.

;; This file is part of GNU Emacs.

;;; Code:

(add-to-list 'load-path (or (and load-file-name (directory-file-name (file-name-directory load-file-name))) (car load-path)))



;;; Generated autoloads from osm.el

 (autoload 'osm-prefix-map "osm" nil t 'keymap)
(autoload 'osm-home "osm" "\
Go to home coordinates." t)
(autoload 'osm-goto "osm" "\
Go to LAT/LON/ZOOM.

(fn LAT LON ZOOM)" t)
(autoload 'osm "osm" "\
Go to LINK.
When called interactively, call the function `osm-home'.

(fn &rest LINK)" t)
(autoload 'osm-bookmark-jump "osm" "\
Jump to osm bookmark BM.

(fn BM)" t)
(autoload 'osm-bookmark-delete "osm" "\
Delete osm bookmark BM.

(fn BM)" t)
(autoload 'osm-bookmark-rename "osm" "\
Rename osm bookmark OLD-NAME.

(fn OLD-NAME)" t)
(autoload 'osm-jump "osm" "\
Jump to named pin." t)
(autoload 'osm-search "osm" "\
Globally search for NEEDLE on `osm-search-server' and display the map.
If the prefix argument LUCKY is non-nil take the first result and jump there.
See `osm-search-server' and `osm-search-language' for customization.

(fn NEEDLE &optional LUCKY)" t)
(autoload 'osm-gpx-show "osm" "\
Show the tracks of gpx FILE in an `osm-mode' buffer.

(fn FILE)" t)
(autoload 'osm-server "osm" "\
Select tile SERVER.

(fn SERVER)" t)
(add-to-list 'browse-url-default-handlers '("\\`geo:" . osm))
(eval-after-load 'ol (lambda nil (declare-function org-link-set-parameters "ol") (declare-function osm--org-link-props "ext:osm") (org-link-set-parameters "geo" :follow (lambda (link _) (osm (concat "geo:" link))) :store (lambda nil (when (eq major-mode 'osm-mode) (apply 'org-link-store-props (osm--org-link-props)))))))
(register-definition-prefixes "osm" '("osm-"))

;;; End of scraped data

(provide 'osm-autoloads)

;; Local Variables:
;; version-control: never
;; no-byte-compile: t
;; no-update-autoloads: t
;; no-native-compile: t
;; coding: utf-8-emacs-unix
;; End:

;;; osm-autoloads.el ends here
