;;; project-shells-autoloads.el --- automatically extracted autoloads (do not edit)   -*- lexical-binding: t -*-
;; Generated by the `loaddefs-generate' function.

;; This file is part of GNU Emacs.

;;; Code:

(add-to-list 'load-path (or (and load-file-name (directory-file-name (file-name-directory load-file-name))) (car load-path)))



;;; Generated autoloads from project-shells.el

(autoload 'project-shells-activate-for-key "project-shells" "\
Create or switch to the shell buffer for the key, the project
name, and the project root directory.

(fn KEY &optional PROJ PROJ-ROOT)")
(autoload 'project-shells-activate "project-shells" "\
Create or switch to the shell buffer for the key just typed

(fn P)" t)
(autoload 'project-shells-setup "project-shells" "\
Configure the project shells with the prefix keymap and the
setup, for format of setup, please refer to document of
project-shells-setup.

(fn MAP &optional SETUP)")
(autoload 'project-shells-mode "project-shells" "\
Toggle Project-Shells mode on or off.

This is a minor mode.  If called interactively, toggle the
`Project-Shells mode' mode.  If the prefix argument is positive,
enable the mode, and if it is zero or negative, disable the mode.

If called from Lisp, toggle the mode if ARG is `toggle'.  Enable
the mode if ARG is nil, omitted, or is a positive number.
Disable the mode if ARG is a negative number.

To check whether the minor mode is enabled in the current buffer,
evaluate `project-shells-mode'.

The mode's hook is called both when the mode is enabled and when
it is disabled.

(fn &optional ARG)" t)
(put 'global-project-shells-mode 'globalized-minor-mode t)
(defvar global-project-shells-mode nil "\
Non-nil if Global Project-Shells mode is enabled.
See the `global-project-shells-mode' command
for a description of this minor mode.
Setting this variable directly does not take effect;
either customize it (see the info node `Easy Customization')
or call the function `global-project-shells-mode'.")
(custom-autoload 'global-project-shells-mode "project-shells" nil)
(autoload 'global-project-shells-mode "project-shells" "\
Toggle Project-Shells mode in all buffers.
With prefix ARG, enable Global Project-Shells mode if ARG is positive;
otherwise, disable it.

If called from Lisp, toggle the mode if ARG is `toggle'.
Enable the mode if ARG is nil, omitted, or is a positive number.
Disable the mode if ARG is a negative number.

Project-Shells mode is enabled in all buffers where `project-shells-mode' would
do it.

See `project-shells-mode' for more information on Project-Shells mode.

(fn &optional ARG)" t)
(register-definition-prefixes "project-shells" '("project-shells-"))

;;; End of scraped data

(provide 'project-shells-autoloads)

;; Local Variables:
;; version-control: never
;; no-byte-compile: t
;; no-update-autoloads: t
;; no-native-compile: t
;; coding: utf-8-emacs-unix
;; End:

;;; project-shells-autoloads.el ends here
